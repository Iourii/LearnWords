<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Language Learning Service</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f1f1f1;
        }
        .container {
            max-width: 400px;
            margin: 20px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1, h2 {
            text-align: center;
            color: #333;
        }
        .word-block {
            border-bottom: 2px solid #ddd;  /* Разделительная линия между вариантами и кнопкой */
            padding-bottom: 20px;  /* Добавляем отступ снизу */
            margin-bottom: 20px;  /* Дополнительный отступ снизу, чтобы отделить от кнопки */
        }
        button, select {
            display: block;
            width: 100%;
            padding: 10px;
            margin-top: 10px;
            font-size: 16px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;  /* Добавляем анимацию для плавного изменения цвета */
        }
        button, select:hover {
            background-color: #0056b3;  /* Темнее при наведении */
        }
        button.correct {
            background-color: #28a745;  /* Зеленый цвет для правильного ответа */
        }
        button.incorrect {
            background-color: #dc3545;  /* Красный цвет для неправильного ответа */
        }
        button#next-btn {
            background-color: #00468d;  /* Красный цвет для неправильного ответа */
        }
        #header {
            display: flex; /* Задаёт flexbox модель отображения */
            justify-content: space-between; /* Равномерно распределяет элементы в контейнере с равными промежутками */
            align-items: center; /* Центрирует элементы по вертикали */
        }
        h1 {
            margin: 10px; /* Добавляет небольшой отступ вокруг каждого заголовка */
        }
        h1#good {color: #28a745;}
        h1#bad {color: #dc3545;}

        .modal {
          display: none;
          position: fixed;
          z-index: 1;
          left: 0;
          top: 0;
          width: 100%;
          height: 100%;
          overflow: auto;
          background-color: rgb(0,0,0);
          background-color: rgba(0,0,0,0.4);
        }

        .modal-content {
          background-color: #fefefe;
          margin: 15% auto;
          padding: 20px;
          border: 1px solid #888;
          width: 80%;
        }

        .close {
          color: #aaaaaa;
          float: right;
          font-size: 28px;
          font-weight: bold;
        }

        .close:hover,
        .close:focus {
          color: #000;
          text-decoration: none;
          cursor: pointer;
        }

    </style>
</head>
<body>
    <div class="container">
        <div id="header">
            <h1 id="good">0</h1>
            <h1>WLS</h1>
            <h1 id="bad">0</h1>
        </div>
        <div class="word-block" id="word-container">
            <h2 id="word"></h2>
            <div id="options"></div>
        </div>
        <button id="next-btn">Next Word</button>  <!-- Кнопка отделена от блока с вариантами -->
    </div>
    <!-- Модальное окно меню -->
    <div id="myModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <p>Choose a dictionary:</p>
        <select name="dict" id="dictionary" onclick="handleChoice()")>
          <option value="verbs">Глаголы (Top 100)</option>
          <option value="verbs2">Глаголы Склонения</option>
          <option value="top100">Top 100 слов</option>
        </select>
        <p>Choose a direction:</p>
        <select name="direct" id="direction" onclick="handleChoice()")>
          <option value="forward">Forward direction</option>
          <option value="reverse">Reverse direction</option>
        </select>
        <!-- <button onclick="handleChoice('forward')">Greek=>Rus</button>
        <button onclick="handleChoice('reverse')">Rus=>Greek</button>
        -->
      </div>
    </div>
    <script>
        // Проверяем, сохранен ли уже идентификатор пользователя в localStorage
        var userId = localStorage.getItem('userId');
        if (!userId) {
            // Если нет, запрашиваем его у пользователя
            userId = prompt('Please enter your user ID:');
            localStorage.setItem('userId', userId);
        }

        var direction = localStorage.getItem('direction');
        if (!direction) {
            localStorage.setItem('direction', "forward");
        }


       // <input type="hidden" name="direction" value="forward">

        // Обработчик нажатия на кнопку "Next Word"
        document.getElementById('next-btn').addEventListener('click', function() {
            // var direction = localStorage.getItem('direction');
            // var dictionary = localStorage.getItem('dictionary');
            const params = {
                    direction: localStorage.getItem('direction'),
                    dictionary: localStorage.getItem('dictionary')
                };

            // Создаем строку параметровdictionary
            const queryString = new URLSearchParams(params).toString();

            //fetch('/train?direction=' + direction  +  , {mode: 'cors'})
            //~ fetch('/train?${queryString}', {mode: 'cors'})
            fetch('http://127.0.0.1:5001/train2?'+queryString, {mode: 'cors'})
                .then(response => response.json())
                .then(data => {
                    document.getElementById('word').textContent = data.word;
                    document.getElementById('options').innerHTML = '';
                    data.options.forEach(function(option, index) {
                        var btn = document.createElement('button');
                        btn.textContent = option;
                        btn.addEventListener('click', function() {
                            if (option === data.correct) {
                                btn.classList.add('correct');
                                document.getElementById('good').textContent = parseInt(document.getElementById('good').textContent) + 1
								const children = document.getElementById('options').children;  // Возвращает все дочерние элементы
								// Отключаем каждого ребенка
								for (const child of children) {
								  if (child.disabled !== undefined) {  // Проверяем, поддерживает ли элемент свойство 'disabled'
									child.disabled = true;  // Отключаем элемент
								  }
								}
                            } else {
                                btn.classList.add('incorrect');
                                document.getElementById('bad').textContent = parseInt(document.getElementById('bad').textContent) + 1
                            }
                        });
                        document.getElementById('options').appendChild(btn);
                    });
                })
                .catch(error => console.error('Error:', error));
        });

        // Получение элементов
        var modal = document.getElementById("myModal");
       // var btn = document.getElementById("header");
        var span = document.getElementsByClassName("close")[0];

        // Открытие модального окна
        document.getElementById("header").addEventListener('click', function() {
          modal.style.display = "block";
        })

        // Закрытие модального окна по клику на крестик
        span.addEventListener('click', function() {
          modal.style.display = "none";
        })

        // Закрытие модального окна по клику вне окна
        window.addEventListener('click', function(event) {
          if (event.target == modal) {
            modal.style.display = "none";
          }
        })

        // Обработка выбора
        function handleChoice() {
          choiceDirection = document.getElementById("direction").value
          choiceDictionary = document.getElementById("dictionary").value
          console.log("User chose: " + choiceDirection + ", " + choiceDictionary);
          localStorage.setItem('direction', choiceDirection);
          localStorage.setItem('dictionary', choiceDictionary);
       //   modal.style.display = "none";
       //   document.getElementById('next-btn').click();
        }
    </script>
</body>
</html>
